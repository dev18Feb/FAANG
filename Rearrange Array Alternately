/*How does expression “arr[i] += arr[max_index] % max_element * max_element” work ? 
The purpose of this expression is to store two elements at index arr[i]. arr[max_index] is stored as multiplier and “arr[i]” is stored as remainder. 
For example in {1 2 3 4 5 6 7 8 9}, max_element is 10 and we store 91 at index 0. With 91, we can get original element as 91%10 and new element as 91/10
*/

// { Driver Code Starts
// C++ program to rearrange an array in minimum 
// maximum form 
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    // This function wants you to modify the given input
    // array and no need to return anything
    // arr: input array
    // n: size of array
    //Function to rearrange  the array elements alternately.
    void rearrange(long long *arr, int n) 
    { 
    	
    	long long int me = arr[n-1]+1;
    	int minindex =0;
    	int maxIndex = n-1;
    	
    	for(int i =0; i<n;i++)
    	{
    
    	  if(i%2==0)
    	  {
    	    arr[i]+=  (arr[maxIndex]%me)*me;
    	   // arr[i] /= me;
    	    maxIndex--;
    	  }
    	  else
    	  {
    	    arr[i]+=  (arr[minindex]%me)*me;
    	  //  arr[i] /= me;
    	    minindex++;  
    	  }
    	   
    	}
    	
    		for(int i =0; i<n;i++)
    		{
    		    arr[i] /= me;
    		}
    }
};

// { Driver Code Starts.

// Driver program to test above function 
int main() 
{
    int t;
    
    //testcases
    cin >> t;
    
    while(t--){
        
        //size of array
        int n;
        cin >> n;
        
        long long arr[n];
        
        //adding elements to the array
        for(int i = 0;i<n;i++){
            cin >> arr[i];
        }
        
        Solution ob;
        
        //calling rearrange() function
        ob.rearrange(arr, n);
        
        //printing the elements
        for (int i = 0; i < n; i++) 
		    cout << arr[i] << " ";
		
		cout << endl;
    }
	return 0; 
} 
  // } Driver Code Ends
