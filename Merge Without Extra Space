// { Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 


 // } Driver Code Ends
class Solution{
    public:
        //Function to merge the arrays.
   
        void merge(long long arr1[], long long arr2[], int n, int m) 
        { 
            // code here 
             int a;
             int b ;
          for(int g = ceil((n+m)/2.0);g>=1; g = ceil (g/2.0))
            {
               for(int i = 0; i+g < n+m; i++)
               {
                   if(i>=n)
                   {
                      a = i-n;
                      b = i+g-n;
                      if(arr2[a]> arr2[b])
                      {
                          swap(arr2[a], arr2[b]);
                      }
                   }
                   else if( i+g >=n)
                   {
                      a = i;
                      b = i+g-n;
                      if(arr1[a]> arr2[b])
                      {
                          swap(arr1[a], arr2[b]);
                      }
                   }
                   else
                   {
                      a = i;
                      b = i+g;
                      if(arr1[a]> arr1[b])
                      {
                          swap(arr1[a], arr1[b]);
                      } 
                   }
                   
               }
               
               if(g==1)
               {
                   break;
               }
            }
            
        } 
};

// { Driver Code Starts.

int main() 
{ 
	
	int T;
	cin >> T;
	
	while(T--){
	    int n, m;
	    cin >> n >> m;
	    
	    long long arr1[n], arr2[m];
	    
	    for(int i = 0;i<n;i++){
	        cin >> arr1[i];
	    }
	    
	    for(int i = 0;i<m;i++){
	        cin >> arr2[i];
	    }
	    Solution ob;
	    ob.merge(arr1, arr2, n, m); 

        for (int i = 0; i < n; i++) 
            cout<<arr1[i]<<" "; 
        
       
	    for (int i = 0; i < m; i++) 
		    cout<<arr2[i]<<" "; 
	    
	    cout<<endl;
	}

	return 0; 
} 
  // } Driver Code Ends
